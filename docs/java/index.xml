<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Java on XLabs</title><link>https://xlabs-club-github-io.pages.dev/docs/java/</link><description>Recent content in Java on XLabs</description><generator>Hugo -- gohugo.io</generator><language>zh</language><copyright>Copyright (c) 2020-2024 XLabs Club</copyright><lastBuildDate>Thu, 07 Sep 2023 16:06:50 +0200</lastBuildDate><atom:link href="https://xlabs-club-github-io.pages.dev/docs/java/index.xml" rel="self" type="application/rss+xml"/><item><title>从 Spring 到 Spring Boot</title><link>https://xlabs-club-github-io.pages.dev/docs/java/migrating-spring-to-spring-boot/</link><pubDate>Sat, 07 Jan 2023 10:54:37 +0800</pubDate><guid>https://xlabs-club-github-io.pages.dev/docs/java/migrating-spring-to-spring-boot/</guid><description>从 Spring 到 Spring Boot，迁移升级快速入门以及各种踩坑记录。
概述 从 Spring 到 Spring Boot，整体开发、运行方式主要变化。
- 当前（老）模式 新模式（本地） 新模式（线上） 开发习惯 Spring + 外置 Tomcat Spring Boot（embed tomcat） Spring Boot War or Jar Java 版本 8、11、16、17 11、17（推荐）、21 11、17（推荐）、21 Tomcat 版本 8.</description></item><item><title>Spring Boot 自定义监控指标</title><link>https://xlabs-club-github-io.pages.dev/docs/java/spring-boot-micrometer/</link><pubDate>Mon, 07 Aug 2023 10:54:37 +0800</pubDate><guid>https://xlabs-club-github-io.pages.dev/docs/java/spring-boot-micrometer/</guid><description>Spring Boot 使用 Micrometer 集成 Prometheus 监控，5 分钟接入自定义监控指标，主要内容：
Micrometer 介绍。 业务如何自定义指标，如何接入 Prometheus，实现方式和规范。 Micrometer 介绍 Micrometer 为 Java 平台上的性能数据收集提供了一个通用的 API，应用程序只需要使用 Micrometer 的通用 API 来收集性能指标，Micrometer 会负责完成与不同监控系统的适配工作。</description></item><item><title>使用 OpenRewrite 进行代码重构</title><link>https://xlabs-club-github-io.pages.dev/docs/java/openrewrite/</link><pubDate>Tue, 09 Jan 2024 22:08:54 +0800</pubDate><guid>https://xlabs-club-github-io.pages.dev/docs/java/openrewrite/</guid><description>作为一个以 Java 和 Spring 为主要技术栈的团队，在日常的软件开发中，我们经常会遇到一系列的组件升级和代码重构需求，诸如：
项目级：整个项目（注此项目指 Maven Project）升级，而不是基于某个 Java 类或片段。 不同跨度变更：比如从 Spring 项目迁移到 Spring Boot，从 Spring Boot 2.x 升级到 3.x，从 Java 8 升级到 Java 21。 安全可靠：变更的代码一定是正确的，至少是逻辑正确的，至少不能像某 AI 助手一样设置一些根本不存在的属性。 经验产品化：比如我并（想）不了解 Spring Boot 3.</description></item></channel></rss>