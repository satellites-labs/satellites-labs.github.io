<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Java on Doks</title><link>https://www.xlabs.club/tags/java/</link><description>Recent content in Java on Doks</description><generator>Hugo -- gohugo.io</generator><language>en</language><copyright>Copyright (c) 2020-2024 Hyas</copyright><lastBuildDate>Sun, 26 Nov 2023 10:21:44 +0800</lastBuildDate><atom:link href="https://www.xlabs.club/tags/java/index.xml" rel="self" type="application/rss+xml"/><item><title>重复 Transfer-Encoding Header 引起的服务 500 问题</title><link>https://www.xlabs.club/blog/%E9%87%8D%E5%A4%8D-transfer-encoding-header-%E5%BC%95%E8%B5%B7%E7%9A%84%E6%9C%8D%E5%8A%A1-500-%E9%97%AE%E9%A2%98/</link><pubDate>Sun, 26 Nov 2023 10:21:44 +0800</pubDate><guid>https://www.xlabs.club/blog/%E9%87%8D%E5%A4%8D-transfer-encoding-header-%E5%BC%95%E8%B5%B7%E7%9A%84%E6%9C%8D%E5%8A%A1-500-%E9%97%AE%E9%A2%98/</guid><description>我有一个 Spring Boot 应用服务，提供了一些简单的查询接口，本身运行很正常，通过 curl 或其他 http 客户端 localhost 请求都没有问题。
某天通过 Traefik 代理了此服务，经过代理后再访问，某个接口一直都是 500 internal server error，其他接口都没有问题。通过 tcpdump 抓包发现，应用服务并没有返回任何 500 错误，而且响应时间和 Body 体大小都很正常。</description></item><item><title>K8S 容器 PID 限制引起的 OOM</title><link>https://www.xlabs.club/blog/k8s-%E5%AE%B9%E5%99%A8-pid-%E9%99%90%E5%88%B6%E5%BC%95%E8%B5%B7%E7%9A%84-oom/</link><pubDate>Thu, 07 Sep 2023 16:21:44 +0800</pubDate><guid>https://www.xlabs.club/blog/k8s-%E5%AE%B9%E5%99%A8-pid-%E9%99%90%E5%88%B6%E5%BC%95%E8%B5%B7%E7%9A%84-oom/</guid><description>问题描述：
一个 Java 应用跑在 K8S 容器内，Pod 内只有 Java 这一个进程。应用跑了一段时间后，CPU、内存占用都不高，但是却出现以下 OutOfMemoryError 错误。
Exception in thread &amp;#34;slow-fetch-15&amp;#34; java.lang.OutOfMemoryError: unable to create new native thread 428 at java.</description></item><item><title>K8S 容器内 Java 进程内存分析</title><link>https://www.xlabs.club/blog/k8s-%E5%AE%B9%E5%99%A8%E5%86%85-java-%E8%BF%9B%E7%A8%8B%E5%86%85%E5%AD%98%E5%88%86%E6%9E%90/</link><pubDate>Sat, 07 Jan 2023 10:54:37 +0800</pubDate><guid>https://www.xlabs.club/blog/k8s-%E5%AE%B9%E5%99%A8%E5%86%85-java-%E8%BF%9B%E7%A8%8B%E5%86%85%E5%AD%98%E5%88%86%E6%9E%90/</guid><description>故事背景：
一个 K8S Pod，里面只有一个 Java 进程，K8S request 和 limit memory 都是 2G，Java 进程核心参数包括：-XX:+UseZGC -Xmx1024m -Xms768m -XX:SoftMaxHeapSize=512m。
服务启动一段时间后，查看 Grafana 监控数据，Pod 内存使用量约 1.</description></item><item><title>从 Spring 到 Spring Boot</title><link>https://www.xlabs.club/docs/java/%E4%BB%8E-spring-%E5%88%B0-spring-boot/</link><pubDate>Sat, 07 Jan 2023 10:54:37 +0800</pubDate><guid>https://www.xlabs.club/docs/java/%E4%BB%8E-spring-%E5%88%B0-spring-boot/</guid><description>从 Spring 到 Spring Boot，迁移升级快速入门以及各种踩坑记录。
概述 从 Spring 到 Spring Boot，整体开发、运行方式主要变化。
- 当前（老）模式 新模式（本地） 新模式（线上） 开发习惯 Spring + 外置 Tomcat Spring Boot（embed tomcat） Spring Boot War or Jar Java 版本 8、11、16、17 11、17（推荐）、21 11、17（推荐）、21 Tomcat 版本 8.</description></item><item><title>Spring Boot 自定义监控指标</title><link>https://www.xlabs.club/docs/java/spring-boot-%E8%87%AA%E5%AE%9A%E4%B9%89%E7%9B%91%E6%8E%A7%E6%8C%87%E6%A0%87/</link><pubDate>Mon, 07 Aug 2023 10:54:37 +0800</pubDate><guid>https://www.xlabs.club/docs/java/spring-boot-%E8%87%AA%E5%AE%9A%E4%B9%89%E7%9B%91%E6%8E%A7%E6%8C%87%E6%A0%87/</guid><description>Spring Boot 使用 Micrometer 集成 Prometheus 监控，5 分钟接入自定义监控指标，主要内容：
Micrometer 介绍。 业务如何自定义指标，如何接入 Prometheus，实现方式和规范。 Micrometer 介绍 Micrometer 为 Java 平台上的性能数据收集提供了一个通用的 API，应用程序只需要使用 Micrometer 的通用 API 来收集性能指标，Micrometer 会负责完成与不同监控系统的适配工作。</description></item><item><title>基于 Envoy 的智能路由服务</title><link>https://www.xlabs.club/docs/cloud/%E5%9F%BA%E4%BA%8E-envoy-%E7%9A%84%E6%99%BA%E8%83%BD%E8%B7%AF%E7%94%B1%E6%9C%8D%E5%8A%A1/</link><pubDate>Mon, 07 Aug 2023 10:54:37 +0800</pubDate><guid>https://www.xlabs.club/docs/cloud/%E5%9F%BA%E4%BA%8E-envoy-%E7%9A%84%E6%99%BA%E8%83%BD%E8%B7%AF%E7%94%B1%E6%9C%8D%E5%8A%A1/</guid><description>基于 Envoy + Java Agent 的智能路由服务实现方案介绍。
核心需求 服务自动注册和发现，通过 Service Name 直接调用服务。当然基本的负载均衡策略、熔断降级限流等功能也要支持。 公司约定的路由策略，支持按照租户路由到特定环境的服务，比如 VIP、Gray、Sandbox 等。 多集群通信，同云内新老 K8S 集群路由打通，可通过 POD IP 互相通信。 跨云通信，支持通过 VPN 或代理，从专属云访问公有云服务。 整体架构 智能路由服务从逻辑上分为数据平面和控制平面，主要包含以下组件。</description></item></channel></rss>