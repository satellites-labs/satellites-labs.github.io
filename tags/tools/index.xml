<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Tools on XLabs</title><link>https://www.xlabs.club/tags/tools/</link><description>Recent content in Tools on XLabs</description><generator>Hugo -- gohugo.io</generator><language>zh</language><copyright>Copyright (c) 2020-2024 XLabs Club</copyright><lastBuildDate>Sun, 03 Mar 2024 21:14:52 +0800</lastBuildDate><atom:link href="https://www.xlabs.club/tags/tools/index.xml" rel="self" type="application/rss+xml"/><item><title>Windows 提权和设置环境变量</title><link>https://www.xlabs.club/blog/windows-takeown/</link><pubDate>Mon, 26 Feb 2024 23:25:29 +0800</pubDate><guid>https://www.xlabs.club/blog/windows-takeown/</guid><description>背景：公司 Windows 办公机受域控安全策略限制，部分文件无权直接修改，另外开发常用的设置系统环境变量也变灰无法设置。此问题解决方式如下。
提升文件权限 点击 Windows + X 快捷键 – 选择「命令提示符（管理员）。
在 CDM 窗口中执行如下命令。
takeown /f C:\要修复的文件路径在拿到文件所有权后，还需要使用如下命令获取文件的完全控制权限。
icacls C:\要修复的文件路径 /Grant Administrators:F命令行设置环境变量 Windows 下命令行设置环境变量，方式为 setx 变量名 变量值，变量值带空格等特殊符号的，用引号引起来。
# 通过命令行设置 Java Home setx JAVA_HOME &amp;#34;C:\Program Files\Java\jdk-11.0.2&amp;#34; # 设置 GO Path setx GOPATH &amp;#34;D:\workspace\go&amp;#34;</description></item><item><title>Git 多用户配置</title><link>https://www.xlabs.club/blog/git-multi-user/</link><pubDate>Mon, 26 Feb 2024 22:55:10 +0800</pubDate><guid>https://www.xlabs.club/blog/git-multi-user/</guid><description>Git 为不同目录配置不同的 config，比如在同一个电脑上区分个人开发账号和公司开发账号，开源项目放一个文件夹，公司项目放一个文件夹，这样在提交代码的时候就不会混乱。
为账户 B 准备一个单独的配置文件，比如： ~/.gitconfig-b，内容根据需要定义。
[user] name = userb-name email = userb-email@test.com修改 ~/.gitconfig 文件，增加以下配置，引用上面创建的配置文件，注意其中的路径用绝对路径，并且路径以 / 结尾。
[includeIf &amp;#34;gitdir:/project/path-b/&amp;#34;] path = /Users/xxxx/.gitconfig-b保存后，在 /project/path-b/ 下新的仓库都会以 .gitconfig-b 中的用户名和邮箱提交了。
注意如果使用 ssh key 方式，在生成 key 的时候 ssh-keygen 名字指定文件名，多个 key 不要覆盖了。</description></item><item><title>Shell 编程实用句式速查</title><link>https://www.xlabs.club/blog/shell-coding/</link><pubDate>Mon, 27 Feb 2023 20:48:53 +0800</pubDate><guid>https://www.xlabs.club/blog/shell-coding/</guid><description>选择执行环境。
#!/usr/bin/env bash #!/usr/bin/bash检查是否以 root 用户执行。
# check if run as root user if [[ `id -u` -ne 0 ]]; then echo &amp;#34;You need root privileges to run this script.&amp;#34; fi获取正在执行脚本的绝对路径，注意直接用 $0 或 pwd 获取的可能都不要你想要的。
current_dir=$(cd `dirname $0`;pwd)为当前目录包含子目录下所有 .sh 文件增加可执行权限。
chmod +x `find . -name &amp;#39;*.sh&amp;#39;`将提示信息显示到终端（控制台），同时也写入到文件里。
log_file=/var/log/test.log echo &amp;#34;This line will echo to console and also write to log file.&amp;#34; | tee -a ${log_file}类似于 Java properties 中 key=value 形式的字符串，取 key 和 value 的值。</description></item></channel></rss>