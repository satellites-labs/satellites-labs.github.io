<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Idaas on XLabs</title><link>https://www.xlabs.club/tags/idaas/</link><description>Recent content in Idaas on XLabs</description><generator>Hugo</generator><language>zh</language><copyright>Copyright (c) 2020-2024 XLabs Club</copyright><lastBuildDate>Sat, 02 Nov 2024 11:53:53 +0800</lastBuildDate><atom:link href="https://www.xlabs.club/tags/idaas/index.xml" rel="self" type="application/rss+xml"/><item><title>使用 oauth2-proxy 为任意程序增加认证鉴权，结合 K8S、traefik、keycloak、backstage 部署配置详解</title><link>https://www.xlabs.club/blog/traefik-oauth2-proxy-keycloak/</link><pubDate>Thu, 10 Oct 2024 23:30:40 +0800</pubDate><guid>https://www.xlabs.club/blog/traefik-oauth2-proxy-keycloak/</guid><description>&lt;p>作为一个程序员，在日常开发中永远避免不了认证鉴权，而我们开发的某些应用，并不需要太复杂的鉴权，比如可能只要求必须是登录用户，或者只需要根据角色进行 RBAC 鉴权。有没有方法简化此流程，让应用开发者只关注业务开发，这就是本文档要解决的问题。&lt;/p>
&lt;p>如果你有类似以下的需求，都可以参考此文档，原理是一样的，组件也可复用。&lt;/p>
&lt;ol>
&lt;li>为原本没有登录验证的服务提供认证服务，比如某些开源组件不支持认证但是又因携带一些危险数据而不想公开访问。&lt;/li>
&lt;li>实现统一的单点登录认证、并支持简单的 RBAC、UBAC 鉴权。&lt;/li>
&lt;li>为 Kubernetus Traefik Nginx Ingress 提供统一的认证入口，一键实现所有入口必须登录才可访问。&lt;/li>
&lt;li>配置 Traefik 使用 Forward Auth，Nginx 使用 auth_request 实现认证，也可以一并参考。&lt;/li>
&lt;li>基于用户、角色等不同属性，路由到不同服务。&lt;/li>
&lt;li>如果你凑巧也在用 &lt;a href="https://backstage.io/" target="_blank" rel="noopener">Backstage&lt;/a>
，这里顺便提供了 Backstage 接入 keycloak 的方法。&lt;/li>
&lt;/ol>
&lt;p>写在前面：&lt;/p>
&lt;ol>
&lt;li>本文档里的示例代码是以 k3s 为基础，使用 traefik 作为 ingress controller，整体完善但略显复杂，如果没有 K3S/K8S，以其他方式部署也是完全可以的，基本原理都是一样的。&lt;/li>
&lt;li>对于某些场景下可选的配置，会单独说明，请注意分别。&lt;/li>
&lt;li>这里提到的每个组件都是可替换的，比如 nginx 代替 traefik，Pomerium 代替 oauth2-proxy，可根据爱好选择，后面也会适当补充几种不同方式的对比和部署差异，更详细内容请参考本站另外一篇文档 &lt;a href="https://www.xlabs.club/docs/platform/iam/" target="_blank" rel="noopener">统一身份认证&lt;/a>
。&lt;/li>
&lt;li>示例中的代码都是从真实环境拷贝经过检验的，但为了便于理解可能裁剪无关紧要的内容，完整的安装部署源码请参考我们的部署脚本 &lt;a href="https://github.com/xlabs-club/xlabs-ops" target="_blank" rel="noopener">xlabs-club/xlabs-ops&lt;/a>
。&lt;/li>
&lt;li>需要懂一些 K8S、OIDC 基础知识，此处只提供链接不展开说明。&lt;/li>
&lt;/ol>
&lt;h2 id="组件介绍">组件介绍&lt;/h2>
&lt;ol>
&lt;li>
&lt;p>Keycloak
Keycloak 是一个开源的身份和访问管理解决方案，支持 OAuth 2.0、OpenID Connect、SAML 等协议。它提供用户管理、角色管理、单点登录（SSO）、身份提供服务等功能，在本示例中担任 Auth Provider 角色。关于 Keycloak 的中文介绍，可参考本站单独的博客 &lt;a href="https://idaas.xlabs.club/" target="_blank" rel="noopener">IDaaS Book&lt;/a>
。&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;a href="https://oauth2-proxy.github.io/oauth2-proxy/" target="_blank" rel="noopener">oauth2-proxy&lt;/a>

顾名思义它是一个关于 oauth 反向代理，主要用来为后端服务增加身份验证层。它支持多种 OAuth 2.0 提供者（如 Google、OIDC、Keycloak 等），可以保护未提供身份验证的应用。oauth2-proxy 在请求进入后端服务之前，会先进行 OAuth 2.0 登录认证，确保请求者具有访问权限。它承担了登录的合法性校验、重定向、登录成功后的 cookie、response 设置等功能。&lt;/p></description></item></channel></rss>